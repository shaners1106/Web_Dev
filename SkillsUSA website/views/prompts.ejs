<!--
Matthew Lochridge, Ryan Grady and Shane Snediker
Dr. Jones CS 301
GP6 Final Project
SkillsUSA Programming Competition website
Last updated: January 24, 2021

This the html file for the coding challenges page

-->


<!DOCTYPE html>
<html lang="en">
  <meta charset="utf-8">
  <head>
    <title>SkillsUSA Prompts</title>
    <!-- Pull in our personalized JavaScript file -->
    <script src="js/prompts.js"></script>
    <!-- Pull in the CSS styling to make this page look great -->
    <link rel = "stylesheet" href = "css/w3.css">
    <!--  Don't think we ended up using JQuery
    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    -->
  </head>
  <!-- Main Div that holds the prompt navigator pane -->
  <div class = "w3-bar w3-blue">
    <a class = "w3-bar-item w3-button w3-black" href="/">Home</a>
    <span class = "w3-bar-item">Prompts</span>    
  </div>     
  <body  class = "w3-light-grey">       
    <div class = "w3-row">
      <div class = "w3-col m3">
        <img src = "img/SkillsUSA-Logo-2c.gif" alt="SkillsUSA Logo" class = "w3-padding" style="width:85%">
      </div>
      <div class = "w3-col m6">
        <!-- Each coding prompt will be contained within its own div element -->
        <!-- This begins prompt 1 -->
        <div class="w3-container w3-card w3-white w3-round w3-margin"><br>
            <p>Click on the prompts below to view and submit when finished</p>
            <button onclick="myFunction('Demo1')" class="w3-btn w3-center w3-block w3-black w3-left-align">Prompt 1</button>
            <div id="Demo1" class="w3-container w3-hide">
            <h4>Spell It Out</h4>
            <p class="lefty"><u>Description</u></p>
            <p class="justify">Each number on the telephone dial (except 0 and 1) corresponds to three alphabetic characters. Those correspondences are:</p>
            <ol start = "2">
              <li> ABC </li> 
              <li> DEF </li>
              <li> GHI </li>
              <li> JKL </li>
              <li> MNO </li>
              <li> PRS </li>
              <li> TUV </li>
              <li> WXY </li>
            </ol>
            <p class="justify">Given a seven digit telephone number, print all 2187 possible "words" that number spells. (They may not be real english words, but just some sequence of characters). Since the digits 0 and 1 have no alphabetic equivalent, an input number which contains those digits should be rejected. The input will be one or more seven digit integers from standard input.
            The problem can be made a bit more challenging by outputting more than one word per line. Usually about seven words will fit on a line.</p>   
            <!-- Formidable middleware form that facilitates node server file upload -->     
            <form action="/" enctype="multipart/form-data" method="post">
              <h5>Upload your code file with the name:</h5>
              <h5 class = "w3-text-red	">"prompt1_code_id#.___"</h5>
              <h5>Upload your screenshot of your printout with the name:</h5>
              <h5 class = "w3-text-red	">"prompt1_printout_id#.___"</h5>
              <input type="file" name="upload" multiple required/>
              <!--
              <div id = "p1screenshot" style = "display: none"><img src="/img/submitSuccess.png" id="p1Code" class="verification"></div>
              -->
              <input class ="w3-button w3-round w3-black" type="submit" value="Upload" id="p1Button"> <!--onclick = "uploadconfirm('p1screenshot')"-->
              <p></p>
            </form>  
        </div>
        <button onclick="myFunction('Demo2')" class="w3-btn w3-center w3-block w3-black w3-left-align">Prompt 2</button>
        <!-- Prompt 2 -->
        <div id="Demo2" class="w3-container w3-hide">
          <h4>Cipher Slices</h4>
          <img src="img/cipher.jpg" alt="A historical cipher" class="cipher">
          <p class="lefty"><u>Description</u></p>
          <p class="justify">
            Did you know that the history of cryptography and ciphers dates back thousands of years to the ancient Egyptians?  For as long as there have been humans roaming the earth, they have always had two inherent needs: to communicate and share information, and to communicate selectively.  These needs necessitated the art of coding.  The science of concealing messages to introduce secrecy in information security is recognized as cryptography.  The term cryptography originated from two Greek root words, ‘Krypto’ meaning hidden and ‘graphene’ meaning writing.  From the hieroglyphs of the ancient Egyptians to the sophistication of blockchain encryption methodology, humans have a rich history of employing technology to aid in the art of cryptography.  
            Can you find a hidden message?
          </p>
          <p class="lefty">  
            Input: A string s of at most 200 letters and four integers a, b, c, d.  The first line will contain s and the second line will contain a, b, c and d separated by spaces.  
          </p>
          <p class="lefty">
            Output: Two slices from the string; from a to b and from c to d, inclusively.  So the slices should include elements s[a] to s[b] and s[c] to s[d].  Send the cipher code slices to standard output separated by a single space.
          </p>
          <p class="lefty">
            <em>Example</em>
          </p>
          <p class="lefty">
            Input:
          </p>
          <p class="lefty" id="fitScreen">
            Fourscoreandsevenyearsagoourfathersbroughtforthonthiscontinent
          </p>
          <p class="lefty">
            25 27 53 61
          </p>
          <p class="lefty">
            Output:
          </p>
          <p class="extraSpace">
            our continent
          </p>
          <!-- Formidable middleware form that facilitates node server file upload -->
          <form action="/" enctype="multipart/form-data" method="post">
            <h5>Upload your code file with the name:</h5>
            <h5 class = "w3-text-red	">"prompt2_code_id#.___"</h5>
            <h5>Upload your screenshot of your printout with the name:</h5>
            <h5 class = "w3-text-red	">"prompt2_printout_id#.___"</h5>
            <input type="file" name="upload" multiple required/>
            <!--
            <div id = "p2screenshot" style = "display: none"><img src="/img/submitSuccess.png" id="p1Code" class="verification"></div>
            -->
            <input class ="w3-button w3-round w3-black" type="submit" value="Upload" id="p1Button">
          <p></p>
            </form>  
        </div>
        <button onclick="myFunction('Demo3')" class="w3-btn w3-center w3-block w3-black w3-left-align">Prompt 3</button>
        <!-- Prompt 3 -->
        <div id="Demo3" class="w3-container w3-hide">
          <h4>Hogwarts Area Codes</h4>
          <img src="img/Hogwarts.jpg" alt="Hogwarts Castle" class="Hogwarts">
          <p class="lefty"><u>Description</u></p>
          <p class="justify">
            In the land of Hogwarts, the adventures of Harry Potter never really end.  At Hogwarts, each of the 4 houses (Gryffindor, Ravenclaw, Hufflepuff and Slytherin) have their own distinguishing telephone number codes.  The Hogwarts phone numbers are always given in a standard 10-digit format without dashes or spaces: dddddddddd.  Hufflepuff phone numbers always begin with ‘101’.  The first 3 digits of Ravenclaw phone numbers always add up to 5.  We all know that the Slytherins tend to be a bit rogue; their phone number code is no different.  If you belong to house Slytherin, your phone number contains all prime numbers.  All other phone numbers that don’t fall into one of these categories belong to Harry Potter’s crew, Gryffindor.
          </p>
          <p class="justify">
            We will give you a phone number from Hogwarts.  Your wizardry must decipher to which house the phone number belongs.
          </p>
          <p class="lefty">
            Input: A 10 digit string phone number from standard input
          </p>
          <p class="lefty">
            Output: Send to standard output the Hogwarts house that owns the phone number
          </p>
          <p class="lefty">
            <em>Examples</em>
          </p>
          <p class="lefty">
            Input: &nbsp; &nbsp; 1010234562
          </p>
          <p class="lefty">
            Output: &nbsp; &nbsp; Hufflepuff
          </p>
          <p class="lefty">
            Input: &nbsp; &nbsp; 2357522373
          </p>
          <p class="extraSpace">
            Output: &nbsp; &nbsp; Slytherin
          </p>
          <!-- Formidable middleware form that facilitates node server file upload -->
          <form action="/" enctype="multipart/form-data" method="post">
            <h5>Upload your code file with the name:</h5>
            <h5 class = "w3-text-red	">"prompt3_code_id#.___"</h5>
            <h5>Upload your screenshot of your printout with the name:</h5>
            <h5 class = "w3-text-red	">"prompt3_printout_id#.___"</h5>
            <input type="file" name="upload" multiple required/>
            <!--
            <div id = "p3screenshot" style = "display: none"><img src="/img/submitSuccess.png" id="p1Code" class="verification"></div>
            -->
            <input class ="w3-button w3-round w3-black" type="submit" value="Upload" id="p1Button">
          <p></p>
            </form>  
        </div>
        <button onclick="myFunction('Demo4')" class="w3-btn w3-center w3-block w3-black w3-left-align">Prompt 4</button>
        <!-- Prompt 4-->
        <div id="Demo4" class="w3-container w3-hide">
          <h4>Baby Emma's Blocks</h4>
          <p class="lefty"><u>Description</u></p>
          <img src="img/Baby_Emma.jpg" alt="Baby playing with blocks" class="babyEmma">
          <p class="justify">
            I love babies!  Babies can entertain themselves for hours doing the simplest of things.  Baby Emma especially loves playing with blocks.  But Baby Emma is funny.  She insists on always making a staircase tower with her blocks.  She has to always start with 1 block at the top of the tower and progressively build her tower downward so that each successive level of blocks always has 1 more block in it.  If she’s given an uneven amount of blocks to where she can’t build a new level, she throws any extra blocks off to the side and refuses to play with them.  Baby Emma is stubborn in her tower building adventures.  Can you please write a program that will help Emma determine how high she can build a tower depending on how many blocks she’s given?
          </p>
          <p class="lefty">
            Input: The amount of blocks that Emma gets to play with later today, n, will come from standard input.  0 &lt;  n &lt; 10000
          </p>
          <p class="lefty">
            Output: An integer value representing the amount of whole staircase tower levels Emma can build based on n should be sent to standard output.
          </p>
          <table>
            <td>
              <p class="extraSpace">
              <em>Examples</em><br><br>
              Input: &nbsp; &nbsp; 3<br>
              Output: &nbsp; 2<br><br>
              Input: &nbsp; &nbsp; 5<br>
              Output: &nbsp; 2
              </p>
            </td>
            <td><img src="img/blocks.PNG" alt="Building blocks" class="blocks"></td>
          </table>
          <!-- Formidable middleware form that facilitates node server file upload -->
          <form action="/" enctype="multipart/form-data" method="post">
            <h5>Upload your code file with the name:</h5>
            <h5 class = "w3-text-red	">"prompt4_code_id#.___"</h5>
            <h5>Upload your screenshot of your printout with the name:</h5>
            <h5 class = "w3-text-red	">"prompt4_printout_id#.___"</h5>
            <input type="file" name="upload" multiple required/>
            <!--
            <div id = "p4creenshot" style = "display: none"><img src="/img/submitSuccess.png" id="p1Code" class="verification"></div>
            -->
            <input class ="w3-button w3-round w3-black" type="submit" value="Upload" id="p1Button">
            <p></p>
          </form>  
        </div>
        <button onclick="myFunction('Demo5')" class="w3-btn w3-center w3-block w3-black w3-left-align">Prompt 5</button>
        <!-- Prompt 5 -->
        <div id="Demo5" class="w3-container w3-hide">
          <h4>A Perfect Pair</h4>
          <p class="lefty"><u>Description</u></p>
          <p class="justify">
            Math and numbers are fun!  I especially love negative numbers.  Do you ever think about how funny negative numbers are?  They’re crazy!  I prefer to keep numbers together with their negative counterpart.  If I have a number 6, I immediately begin looking for -6.  When someone gives me a -200, I can’t sleep until I find 200.  I wonder if you might be willing to help me.  I have an array of integers and I need help finding the indices that are holding the perfect pair: a number and it’s negative. 
          </p>
          <p class="extraSpace">
            Input:  From standard input a number n 0 &lt; n &lt; 1000 and an array A[0…n] of integers with values ranging from -100 to 100. Input will come in on 2 lines.  The first line will hold n, the second line will hold A.<br>
            Output: Send to standard output 2 integers 0 &lt; p &lt; q &lt; n such that A[p] = - A[q]. Place p and q on the same line separated by a single space.<br><br>
            <em>Example</em><br>
            Input:<br>
            5<br>
            4 5 6 8 -5<br><br>
            Output:<br>
            1 4
          </p>
          <!-- Formidable middleware form that facilitates node server file upload -->
          <form action="/" enctype="multipart/form-data" method="post">
            <h5>Upload your code file with the name:</h5>
            <h5 class = "w3-text-red	">"prompt5_code_id#.___"</h5>
            <h5>Upload your screenshot of your printout with the name:</h5>
            <h5 class = "w3-text-red	">"prompt5_printout_id#.___"</h5>
            <input type="file" name="upload" multiple required/>
            <!--
            <div id = "p5screenshot" style = "display: none"><img src="/img/submitSuccess.png" id="p1Code" class="verification"></div>
            -->
            <input class ="w3-button w3-round w3-black" type="submit" value="Upload" id="p1Button">
            <p></p>
          </form>  
        </div>
        <br>
    </div>
        </div>
        </div>
        <!-- JavaScript that helps the prompts navigation pane unfold appropriately -->
        <script>
            function myFunction(id) {
              var x = document.getElementById(id);
              if (x.className.indexOf("w3-show") == -1) {
                x.className += " w3-show";
              } else { 
                x.className = x.className.replace(" w3-show", "");
              }
            }
            function uploadconfirm(id) {
              var x = document.getElementById(id);
              if (x.style.display === "none") {
              x.style.display = "block";
            } else {
              x.style.display = "none";
              }
            }
            </script>
</body>
</html>